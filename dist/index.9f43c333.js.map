{"mappings":"kBAAMA,EAAiBC,SAASC,eAAe,mBACzCC,EAAYF,SAASC,eAAe,SACpCE,EAAaH,SAASC,eAAe,UACrCG,EAAaJ,SAASC,eAAe,WACrCI,EAAcL,SAASC,eAAe,aACtCK,EAASN,SAASC,eAAe,cAEnCM,EAAAA,GAEJ,SAAAC,IACEF,EAAOG,QAAS,EAChBV,EAAeU,QAAS,EAW1B,SAAAC,IACEF,UAEMG,EAAQJ,EAAUK,KAAKC,MAAMD,KAAKE,SAAWP,EAAUQ,SAC7DC,QAAQC,IAAIN,GAEPA,EAAMO,OAGTf,EAAWgB,YAAcR,EAAMO,OAF/Bf,EAAWgB,YAAc,UAMvBR,EAAMS,KAAKL,OAAS,IACtBb,EAAUmB,UAAUC,IAAI,cAExBpB,EAAUmB,UAAUE,OAAO,cAI7BrB,EAAUiB,YAAcR,EAAMS,KA3BzBd,EAAOG,SACVV,EAAeU,QAAS,EACxBH,EAAOG,QAAS,GAiDpBJ,EAAYmB,iBAAiB,QAASd,GACtCN,EAAWoB,iBAAiB,SAP5B,iBACQC,EAAAA,yCAAsDvB,EAAUiB,iBAAiBhB,EAAWgB,cAClGO,OAAOC,KAAKF,EAAY,aAf1BG,iBACEpB,cAGQqB,QAAiBC,MAFV,+BAGbvB,QAAkBsB,EAASE,OAC3BrB,UACOsB,GACPhB,QAAQC,IAAIe,IAehBC","sources":["./src/script.js"],"sourcesContent":["const quoteContainer = document.getElementById(\"quote-container\");\r\nconst quoteText = document.getElementById(\"quote\");\r\nconst authorText = document.getElementById(\"author\");\r\nconst twitterBtn = document.getElementById(\"twitter\");\r\nconst newQuoteBtn = document.getElementById(\"new-quote\");\r\nconst loader = document.getElementById(\"loader\");\r\n\r\nlet apiQuotes = [];\r\n\r\nfunction showLoadingSpinner() {\r\n  loader.hidden = false;\r\n  quoteContainer.hidden = true;\r\n}\r\n\r\nfunction removeLoadingSpinner() {\r\n  if (!loader.hidden) {\r\n    quoteContainer.hidden = false;\r\n    loader.hidden = true;\r\n  }\r\n}\r\n\r\n// Show new quote\r\nfunction newQuote() {\r\n  showLoadingSpinner();\r\n  // Pick randomly quote from apiQuotes array\r\n  const quote = apiQuotes[Math.floor(Math.random() * apiQuotes.length)];\r\n  console.log(quote);\r\n  // Check if Author field is blank and replace it witch \"Unknown\"\r\n  if (!quote.author) {\r\n    authorText.textContent = \"Unknown\";\r\n  } else {\r\n    authorText.textContent = quote.author;\r\n  }\r\n\r\n  // Check quote length to determine styling\r\n  if (quote.text.length > 120) {\r\n    quoteText.classList.add(\"long-quote\");\r\n  } else {\r\n    quoteText.classList.remove(\"long-quote\");\r\n  }\r\n\r\n  // Set quote, hide loader\r\n  quoteText.textContent = quote.text;\r\n  removeLoadingSpinner();\r\n}\r\n\r\n// Get quotes from Api\r\nasync function getQuotes() {\r\n  showLoadingSpinner();\r\n  const apiUrl = \"https://type.fit/api/quotes\";\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    apiQuotes = await response.json();\r\n    newQuote();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// Tweet quote\r\nfunction tweetQuote() {\r\n  const twitterUrl = `https://twitter.com/intent/tweet?text=${quoteText.textContent} - ${authorText.textContent}`;\r\n  window.open(twitterUrl, \"_blank\");\r\n}\r\n\r\n// Event Listeners\r\nnewQuoteBtn.addEventListener(\"click\", newQuote);\r\ntwitterBtn.addEventListener(\"click\", tweetQuote);\r\n\r\n// On load\r\ngetQuotes();\r\n"],"names":["$ab82335d0333bc61684b565fa6955dcc$var$quoteContainer","document","getElementById","$ab82335d0333bc61684b565fa6955dcc$var$quoteText","$ab82335d0333bc61684b565fa6955dcc$var$authorText","$ab82335d0333bc61684b565fa6955dcc$var$twitterBtn","$ab82335d0333bc61684b565fa6955dcc$var$newQuoteBtn","$ab82335d0333bc61684b565fa6955dcc$var$loader","$ab82335d0333bc61684b565fa6955dcc$var$apiQuotes","$ab82335d0333bc61684b565fa6955dcc$var$showLoadingSpinner","hidden","$ab82335d0333bc61684b565fa6955dcc$var$newQuote","quote","Math","floor","random","length","console","log","author","textContent","text","classList","add","remove","addEventListener","twitterUrl","window","open","async","response","fetch","json","error","$ab82335d0333bc61684b565fa6955dcc$var$getQuotes"],"version":3,"file":"index.9f43c333.js.map"}